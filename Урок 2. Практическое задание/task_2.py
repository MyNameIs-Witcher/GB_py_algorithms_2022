"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. В задании нельзя применять циклы.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def parse_digit(digit, even = int(), odd = int()):
  if len(str(digit)) > 1:
    number = digit % 10
    if number % 2 == 0:
      even += 1
    else:
      odd += 1
    digit = digit // 10
    parse_digit(digit, even, odd)
  else:
    if digit % 2 == 0:
      even += 1
    else:
      odd += 1
    print(f'Количество четных и нечетных цифр в числе равно: ({even}, {odd})')


if __name__ == '__main__':
  digit = int(input('Введи число: '))
  parse_digit(digit)
